user  nginx;
pid   /run/nginx.pid;

# Worker processes configuration
worker_processes  auto;
events {
    worker_connections  1024;
}

# Error log configuration
error_log  /var/log/nginx/error.log notice;

http {

    # Resolver configuration
    # Docker's internal DNS resolver is used
    # This allows Nginx to resolve service names to IP addresses
    resolver 127.0.0.11 valid=60s;

    # MIME types configuration
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log format for access logs
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Access log configuration
    access_log  /var/log/nginx/access.log  main;

    # Sendfile settings
    # This enables efficient file transfers for static files
    # Good for React/Next.js assets but will be overridden for API
    sendfile        on;
    tcp_nopush      on;

    # TCP settings for better performance
    keepalive_timeout  65;
    
    # Additional optimizations for TTFB and GraphQL API
    # Note: tcp_nodelay overrides tcp_nopush for dynamic content
    tcp_nodelay on;
    client_body_buffer_size 256k;
    client_header_buffer_size 16k;
    client_max_body_size 100m;
    large_client_header_buffers 8 32k;
    client_body_timeout 30s;
    client_header_timeout 30s;

    # Rate limiting settings
    limit_req_zone $binary_remote_addr zone=api_zone:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=website_zone:10m rate=30r/s;

    # Include additional configuration files
    # This allows for modular configuration
    include /etc/nginx/conf.d/*.conf;
    
}